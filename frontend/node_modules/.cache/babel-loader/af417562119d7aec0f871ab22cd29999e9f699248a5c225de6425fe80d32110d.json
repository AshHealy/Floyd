{"ast":null,"code":"var _jsxFileName = \"/Users/ash/Desktop/Floyd/src/floyd.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport alive from './images/floyd-alive.gif';\nimport dead from './images/floyd-dead.gif';\nimport heart from './images/heartbeat.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Floyd = () => {\n  _s();\n  const [age, setAge] = useState(0);\n  const [poop, setPoop] = useState(0);\n  const [health, setHealth] = useState(100);\n  const maxHealth = 100;\n  const [mood, setMood] = useState(100);\n  const [isAlive, setIsAlive] = useState(true);\n  const [burger, setBurger] = useState(0);\n  const [isSleeping, setIsSleeping] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [imageSource, setImageSource] = useState(alive);\n  useEffect(() => {\n    let timer = setInterval(() => {\n      if (isAlive) {\n        setAge(age + 1);\n        setHealth(health - 1);\n        setMood(mood - 1);\n        if (mood <= 0 || health <= 0 || age > 100) {\n          setIsAlive(false);\n          setImageSource(dead);\n        }\n      }\n    }, 1000);\n    return () => {\n      if (isAlive) {\n        clearInterval(timer);\n      }\n    };\n  }, [age, health, mood, isAlive]);\n  const resetFloyd = () => {\n    setAge(0);\n    setPoop(0);\n    setHealth(100);\n    setMood(100);\n    setIsAlive(true);\n    setBurger(0);\n    setIsSleeping(false);\n    setIsPlaying(false);\n    setImageSource(alive);\n  };\n  const feedBurger = () => {\n    setTimeout(() => {\n      setPoop(poop => poop + 1);\n    }, 5000);\n    setBurger(burger => burger + 1);\n    setHealth(health => health + 5);\n    setMood(mood => mood + 5);\n  };\n  const putToSleep = () => {\n    if (!isPlaying && typeof health === 'number' && typeof isSleeping === 'boolean') {\n      if (!isSleeping) {\n        setIsSleeping(true);\n        setHealth(Math.min(health + 10, maxHealth));\n        setIsPlaying(false);\n      }\n    }\n  };\n  const wakeUp = () => {\n    setIsSleeping(false);\n    setIsPlaying(false);\n  };\n  const play = () => {\n    if (!isSleeping) {\n      setMood(mood + 10);\n      setIsPlaying(true);\n    }\n  };\n  const stopPlaying = () => {\n    setIsPlaying(false);\n  };\n  const clearPoop = () => {\n    setPoop(0);\n  };\n  const killFloyd = () => {\n    setIsAlive(false);\n    setImageSource(dead);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"GameContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageSource,\n      alt: \"floyd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"FloydStats\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Age: \", age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Poop: \", poop]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: heart,\n          alt: \"heart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), \"  \", health]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mood: \", mood]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Burger: \", burger]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Is Sleeping: \", isSleeping ? \"Yes\" : \"No\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Is Playing: \", isPlaying ? \"Yes\" : \"No\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ButtonContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: feedBurger,\n        disabled: !isAlive,\n        children: \"Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearPoop,\n        disabled: !isAlive,\n        children: \"Clean\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: putToSleep,\n        disabled: !isAlive,\n        children: \"Sleep\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: wakeUp,\n        disabled: !isSleeping + !isAlive,\n        children: \"Wake Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: play,\n        disabled: !isAlive,\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopPlaying,\n        disabled: !isPlaying + !isAlive,\n        children: \"Stop Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DevTools\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"kill\",\n        onClick: killFloyd,\n        children: \"Kill Floyd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 3\n      }, this), !isAlive && /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"reset\",\n        onClick: resetFloyd,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }, this);\n};\n_s(Floyd, \"Q9qzmQz+TpSUvgQ0VHQI+9Vqcek=\");\n_c = Floyd;\nexport default Floyd;\nvar _c;\n$RefreshReg$(_c, \"Floyd\");","map":{"version":3,"names":["React","useState","useEffect","alive","dead","heart","Floyd","age","setAge","poop","setPoop","health","setHealth","maxHealth","mood","setMood","isAlive","setIsAlive","burger","setBurger","isSleeping","setIsSleeping","isPlaying","setIsPlaying","imageSource","setImageSource","timer","setInterval","clearInterval","resetFloyd","feedBurger","setTimeout","putToSleep","Math","min","wakeUp","play","stopPlaying","clearPoop","killFloyd"],"sources":["/Users/ash/Desktop/Floyd/src/floyd.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport alive from './images/floyd-alive.gif';\nimport dead from './images/floyd-dead.gif';\nimport heart from './images/heartbeat.gif'\n\n\n\nconst Floyd = () => {\n  const [age, setAge] = useState(0);\n  const [poop, setPoop] = useState(0);\n  const [health, setHealth] = useState(100);\n  const  maxHealth = 100;\n  const [mood, setMood] = useState(100);\n  const [isAlive, setIsAlive] = useState(true);\n  const [burger, setBurger] = useState(0);\n  const [isSleeping, setIsSleeping] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [imageSource, setImageSource] = useState(alive);\n  \n  useEffect(() => {\n    let timer = setInterval(() => {\n      if (isAlive) {\n        setAge(age + 1);\n        setHealth(health - 1);\n        setMood(mood - 1);\n        if (mood <= 0 || health <= 0 || age > 100) {\n          setIsAlive(false);\n          setImageSource(dead);\n        }\n      }\n    }, 1000);\n    return () => {\n      if (isAlive) {\n        clearInterval(timer);\n      }\n    }\n  }, [age, health, mood, isAlive]);\n\n  const resetFloyd = () => {\n    setAge(0);\n    setPoop(0);\n    setHealth(100);\n    setMood(100);\n    setIsAlive(true);\n    setBurger(0);\n    setIsSleeping(false);\n    setIsPlaying(false);\n    setImageSource(alive);\n  };\n\n  const feedBurger = () => {\n    setTimeout(() => {\n        setPoop(poop => poop + 1);\n    }, 5000);\n    setBurger(burger => burger + 1);\n    setHealth(health => health + 5);\n    setMood(mood => mood + 5);\n  };\n\n  const putToSleep = () => {\n    if (!isPlaying && typeof health === 'number' && typeof isSleeping === 'boolean' ) {\n        if(!isSleeping) {\n          setIsSleeping(true);\n          setHealth(Math.min(health + 10, maxHealth));\n          setIsPlaying(false);\n        }\n    }\n  };\n\n  const wakeUp = () => {\n   setIsSleeping(false);\n   setIsPlaying(false);\n  };\n\n  const play = () => {\n   if(!isSleeping) {\n     setMood(mood + 10);\n     setIsPlaying(true);\n   }\n  };\n\n  const stopPlaying = () => {\n   setIsPlaying(false);\n  };\n\n  const clearPoop = () => {\n    setPoop(0);\n  };\n\n  const killFloyd = () => {\n    setIsAlive(false);\n    setImageSource(dead);\n  };\nreturn (\n  <div className=\"GameContainer\">\n    <img src={imageSource} alt=\"floyd\" />\n    <h2 className='FloydStats'>\n      <p>Age: {age}</p>\n      <p>Poop: {poop}</p>\n      <p> <img src={heart} alt=\"heart\" />  {health}</p>\n      <p>Mood: {mood}</p>\n      <p>Burger: {burger}</p>\n      <p>Is Sleeping: {isSleeping ? \"Yes\" : \"No\"}</p>\n      <p>Is Playing: {isPlaying ? \"Yes\" : \"No\"}</p>\n    </h2>\n  <div className='ButtonContainer'>\n    <button onClick={feedBurger} disabled={!isAlive}>Feed</button>\n    <button onClick={clearPoop} disabled={!isAlive}>Clean</button>\n    <button onClick={putToSleep} disabled={!isAlive} >Sleep</button>\n    <button onClick={wakeUp} disabled={!isSleeping + !isAlive}>Wake Up</button>\n    <button onClick={play} disabled={!isAlive} >Play</button>\n    <button onClick={stopPlaying} disabled={!isPlaying + !isAlive}>Stop Playing</button>\n  </div>\n\n  <div className='DevTools'>\n  <button  id='kill' onClick={killFloyd}>Kill Floyd</button>\n    {!isAlive && <button id='reset' onClick={resetFloyd}>Reset</button>}\n  </div>\n\n  </div>\n);\n};\n\nexport default Floyd;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}